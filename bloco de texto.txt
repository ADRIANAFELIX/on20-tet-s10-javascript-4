<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="style.css">
  <title>Desafio semana 9</title>
</head>

<body>
  <main id="demo"></main>
  <script src="script.js"></script>
  <script src="https://kit.fontawesome.com/0e3817284c.js" crossorigin="anonymous"></script>
</body>

</html>

********************************************
* 
O exercício consiste em usar JavaScript para popular os campos corretamente com os dados do arquivo data.json (ou do objeto JSON) um site de informações sobre séries protagonizadas por mulheres trans e travestis, neste caso a página exibe 5 séries, em 5 cards diferentes em uma só página;

Importante:

1. Crie seu próprio layout usando HTML e CSS nos arquivos já criados nesta pasta;
2. Repare que este Json é uma matriz, logo é possível usar métodos de array para acessar seu conteúdo;
3. Entregue este exercício da maneira que conseguir, use o exemplo da sala para guiar nesta construção;
*/

// async function getJson() {
//   const data = await fetch("./data.json")
//   const json = await data.json()
//   return json
// }

const container = document.getElementById('demo')

function createCard(serie) {
  return `
    <div class="cards">
      <img class="covers" src=${serie.imagem}>
      <h2 class="titles">${serie.titulo}</h2>
      <p class="contents">Ano: <span class="dynamic-text">${serie.ano}</span></p>
      <p class="contents">Direção: <span class="dynamic-text">${serie.diretor}</span></p>
      <p class="contents">Gêneros: <span class="dynamic-text">${serie.generos.join(" - ")}</span></p>
      <p class="contents">Elenco: <span class="dynamic-text">${serie.elenco.join(" - ")}</span></p>
      <a target="_blank" href=${serie.instagram}><i class="fab fa-instagram"></i></a>
    </div>
  `
}

function fillPage(series) {
    series.forEach((serie) => {
      container.innerHTML += createCard(serie)
    })
}

fillPage(json)
// getJson().then(series => fillPage(series))


/*
function fillPage(series) {
    series.map((serie) => {
      const card = document.createElement("div")
      card.classList.add("cards")
      container.appendChild(card)

      const cover = document.createElement("img")
      cover.classList.add("covers")
      cover.setAttribute('src', serie.imagem)
      card.appendChild(cover)

      const title = document.createElement("h2")
      title.classList.add("titles")
      title.innerText = serie.titulo
      card.appendChild(title)

      const year = document.createElement("p")
      year.classList.add("contents")
      year.innerHTML = `Ano: <span class="dynamic-text">${serie.ano}</span>`
      card.appendChild(year)

      const director = document.createElement("p")
      director.classList.add("contents")
      director.innerHTML = `Direção: <span class="dynamic-text">${serie.diretor}</span>`
      card.appendChild(director)

      const genders = document.createElement("p")
      genders.classList.add("contents")
      genders.innerHTML = `Gêneros: <span class="dynamic-text">${serie.generos.join(" - ")}</span>`
      card.appendChild(genders)

      const cast = document.createElement("p")
      cast.classList.add("contents")
      cast.innerHTML = `Elenco: <span class="dynamic-text">${serie.elenco.join(" - ")}</span>`
      card.appendChild(cast)

      const instagram = document.createElement("a")
      instagram.setAttribute("href", serie.instagram)
      instagram.setAttribute("target", "_blank")
      instagram.innerHTML = `<i class="fab fa-instagram"></i>`
      card.appendChild(instagram)
    })
**********************
@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,400;0,600;1,400&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
  font-size: 10px;
  font-family: 'Nunito', sans-serif; /* https://fonts.google.com/specimen/Nunito */
}

body {
  width: 100%;
  background-color: #e772ca; /* https://flatuicolors.com/palette/de */
}

#demo {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  min-height: 100vh;
}

.cards {
  background-color: #f1f1f140;
  backdrop-filter: blur(10px);
  width: 15vw;
  min-height: 50vh;
  padding: 3rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  border-radius: 2rem;
  box-shadow: 2px 4px 10px #57657470;
}

.covers {
  margin-top: 1rem;
  border-radius: 50%;
  border: solid 2px #a55eea50;
  height: 20vh;
}

.titles {
  margin: 2rem 0 1rem 0;
  font-size: 3rem;
  color: rgb(15, 13, 15);
}

.contents {
  font-size: 1.4rem;
  color: rgb(53, 1, 53);
  font-weight: 600;
  align-self: flex-start;
}

.dynamic-text {
  font-size: 1.5rem;
  color: #f3f3f399;
  margin-left: .5rem;
  text-decoration: none;
}

.fab {
  margin-top: 1.8rem;
  font-size: 4rem;
  text-align: center;
  width: 100%;
  filter: drop-shadow(1px 1px 1px #57657490);
  color: rgb(63, 3, 63);
  outline: none;
}

}